@page "/candle/{id:int}"
@layout CandlesLayout
@using AdminApp.WASM.Application.Utility;
@using AdminApp.WASM.Models.FormModels;
@using AdminApp.WASM.Models.ViewModels;
@inject NavigationManager navmanager;
@inject HttpClient hclient;
@inject CandleHandlerService candleHandler;

<h3>Змінити свічку</h3>

<AdminApp.WASM.Components.NavigationComponents.ReturnBackButtonComponent FromPageReached="candle" Text="Назад" />


<EditForm Model="NewCandleForm" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" @onsubmit:preventDefault>
	<DataAnnotationsValidator />
	<CascadingValue Value="NewCandleForm">
		<CandleAsInputFields />
	</CascadingValue>

	<div class="container-fluid d-grid d-md-block">
		<button class="btn btn-lg btn-success rounded-1">Зберегти</button>
	</div>
</EditForm>

<div> div to not missclick </div>
		<button @onclick="(() => DeleteCandle())"> Видалити</button>
<p> @MessageResponse</p>

@code {
	[Parameter]
	public int Id { get; set; }

	public NewCandleFormModel NewCandleForm { get; set; } = new();

	public string MessageResponse { get; set; } = "";

	private CandleFullVM? _selectedCandle = new CandleFullVM();

	private bool isFunctionDone = false;

	protected override async Task OnInitializedAsync()
	{
		if (!isFunctionDone)
		{
			//_selectedCandle = await hclient.GetFromJsonAsync<CandleFullVM>($"api/candle/cid={Id}?view=full");

			_selectedCandle = await candleHandler.GetCanlde($"api/candle/cid={Id}?view=full");
			NewCandleForm = _selectedCandle?.ConvertToFormModel_FromFullVM() ?? new NewCandleFormModel();
			MessageResponse = "";
		}
	}


	public async Task HandleValidSubmit()
	{
		//_selectedCandle = CandleFormModel.ConvertToFullVM_FromFormModel();
		//_selectedCandle = _selectedCandle?.UpdateValues_FromFormModel(CandleFormModel);

		_selectedCandle.Name = NewCandleForm.Name;
		_selectedCandle.Description = NewCandleForm.Description;
		_selectedCandle.Category = NewCandleForm.Category;
		_selectedCandle.PhotoLink = NewCandleForm.PhotoLink;
		_selectedCandle.RealCost = NewCandleForm.RealCost ?? _selectedCandle.RealCost;
		_selectedCandle.SellPrice = NewCandleForm.SellPrice ?? _selectedCandle.SellPrice;
		_selectedCandle.HeightCM = NewCandleForm.HeightCM ?? _selectedCandle.HeightCM;
		_selectedCandle.BurningTimeMins = NewCandleForm.BurningTimeMins ?? _selectedCandle.BurningTimeMins;
		_selectedCandle.WickDiameterCM = NewCandleForm.WickDiameterCM ?? _selectedCandle.WickDiameterCM;
		_selectedCandle.WaxNeededGram = NewCandleForm.WaxNeededGram ?? _selectedCandle.WaxNeededGram;


		_selectedCandle.Id = Id;

		var result = await candleHandler.UpdateCandleAsync($"api/candle/cid={Id}", _selectedCandle);
		if(result)
		{
			MessageResponse = $"Свічка оновлена.";
			NewCandleForm = new();
			_selectedCandle = null;
		}
		else
		{
			MessageResponse = $"Помилка при збереженні. Спробуйте ще раз.";
		}
	}

	public void HandleInvalidSubmit()
	{

		MessageResponse = "Invalid submit.";
	}

	public async Task DeleteCandle()
	{


		var result = await candleHandler.DeleteCandleAsync($"api/candle/cid={Id}");
		if(result)
		{
			MessageResponse = "Свічка видалена.";
			NewCandleForm = new();
		}
		else
		{
			MessageResponse = "Помилка при видаленні свічки";
		}
	}

}
