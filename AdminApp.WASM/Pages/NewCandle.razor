@page "/new-candle"
@layout CandlesLayout
@using AdminApp.WASM.Application.Utility;
@using AdminApp.WASM.Models.ViewModels;
@inject NavigationManager navmanager;
@inject HttpClient hclient;
@inject CandleHandlerService candleInteractor;

<div>
	<AdminApp.WASM.Components.NavigationComponents.ReturnBackButtonComponent FromPageReached="candle" Text="Всі свічки" />
</div>

<div class="container">
	<h3 class="display-4">Нова Свічка</h3>
</div>

<div class="container">
<EditForm Model="NewCandleForm" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" @onsubmit:preventDefault>
	<DataAnnotationsValidator />
	<CascadingValue Value="NewCandleForm">
		<CandleAsInputFields/>
	</CascadingValue>

	<div class="container-fluid d-grid d-md-block">
		<button class="btn btn-lg btn-success rounded-1">Додати</button>
	</div>
</EditForm>
</div>
<p> @MessageResponse</p>

@code {
	public NewCandleFormModel NewCandleForm { get; set; } = new();

	public string MessageResponse { get; set; } = "";

	public async Task HandleValidSubmit()
	{
		CandleFullVM candleToAdd = NewCandleForm.ConvertToFullVM_FromFormModel();

		//var result = await hclient.PostAsJsonAsync<CandleFullVM>("api/candle?categoryId=1", candleToAdd);

		// if (result.IsSuccessStatusCode)
		// {
		// 	MessageResponse = "Свічка успішно додана.";
		// 	NewCandleForm = new();
		// 	//navmanager.NavigateTo("candles");
		// }

		// else 
		// {
		// 	MessageResponse = "вдалось додати свічку.";
		// }

		var result = await candleInteractor.CreateCandleAsync("api/candle", candleToAdd);
		if(result)
		{
			MessageResponse = "Свічка успішно додана.";
			NewCandleForm = new();
		}
		else
		{
			MessageResponse = "Не вдалось додати свічку";	}
	}

	public void HandleInvalidSubmit()
	{
		MessageResponse = "Invalid entry";
	}

}
