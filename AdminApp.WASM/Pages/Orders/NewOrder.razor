@page "/order/new-order"
@using AdminApp.WASM.Models;
@inject OrderHandlerService orderHandler;
@inject CandleHandlerService candleHandler;
@inject ILogger<NewOrder> logger;
@inject NavigationManager navManager;
@layout OrdersLayout;


<div>
	<AdminApp.WASM.Components.NavigationComponents.ReturnBackButtonComponent FromPageReached="order" Text="Всі замовлення" ButtonClass="btn-outline-dark"/>
</div>


<MessageResponseComponent MessageResponse="@MessageResponse"/>


<div class="container">
	<h3>Нове замовлення (юхууу!)</h3>
</div>


<EditForm Model="OrderModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
	<DataAnnotationsValidator />
	<OrderAsInputFields OrderModel="OrderModel" Candles="Candles" CandlesOrdered="CandlesOrdered"/>
	
	<div class="container d-grid d-md-block p-5">
		<ButtonWithSpinnerAction ButtonCss="btn btn-success" ButtonText="Додати замовлення" IsButtonPressed=@IsAddButtonPressed />
		@* <button class="btn btn-success">Додати замовлення</button> *@
	</div>
</EditForm>



@code {
	public NewOrderFormModel OrderModel { get; set; } = new();

	private string _url = "api/order";

	public string MessageResponse { get; set; } = "";

	public IEnumerable<CandleFullVM> Candles { get; set; } = Enumerable.Empty<CandleFullVM>();

	public List<CandleOrdered> CandlesOrdered { get; set; } = new List<CandleOrdered>();

	public bool IsAddButtonPressed { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		Candles = await candleHandler.GetAllCandlesListAsync("api/candle?view=full");
	}

	public async Task HandleValidSubmit()
	{
		IsAddButtonPressed = true;

		// converting all ordered candles which has quantity more than 0 to the dictionary of OrderModel
		foreach(var candle in CandlesOrdered)
		{
			if(candle.Quantity > 0)
			{
				OrderModel.CandleIdAndQuantity.Add(candle.Id, candle.Quantity);
			}
		}

		var orderToAdd = OrderModel.ConvertToFullVM_FromFormModel();

		var result = await orderHandler.CreateOrder(_url, orderToAdd);

		if(result)
		{
			MessageResponse = "Замовлення додано.";

			await Task.Delay(1000);
			navManager.NavigateTo("/order");
		}
		else
		{
			MessageResponse = "Помилка при додаванні замовлення. Спробуйте ще раз.";
		}

		IsAddButtonPressed = false;
	}

	public void HandleInvalidSubmit()
	{
		MessageResponse = "Некоректно введені дані.";
	}
}
