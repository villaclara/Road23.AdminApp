@page "/order"
@layout OrdersLayout
@inject OrderHandlerService orderHandler;
@inject CandleHandlerService candleHandler;
@inject NavigationManager navManager;



<div class="container">

	<div class="container">
		<h1 class="display-4">Замовлення</h1>
	</div>


	<div class="container">
		<a href="/order/new-order" class="btn btn-lg btn-light">
			<span class="bi bi-plus-square" aria-hidden="true"></span> Замовлення
		</a>
	</div>

	@if (OrdersExpanded is not null && OrdersExpanded.Any())
	{
		<div class="container px-0">
			<table class="table align-middle">
				<thead>
					<tr>
						<th>Дата</th>
						<th>Свічка</th>
						<th>Шт</th>
						<th>Сума</th>
						<th>Комент</th>
					</tr>
				</thead>

				<tbody>
					@foreach (var order in OrdersExpanded)
					{
						<tr @onclick="() => order.Expanded = !order.Expanded">
							<td>@order.OrderVM.OrderDate.ToString("dd/MM")</td>
							<td>
								@foreach (var detail in order.OrderVM.OrderDetails)
								{
									@CandleNames.FirstOrDefault(c => c.Id == detail.CandleId)?.Name
									<br />
								}
							</td>
							<td>
								@foreach (var detail in order.OrderVM.OrderDetails)
								{
									@detail.CandleQuantity
									<br />
								}
							</td>
							<td>@order.OrderVM.TotalSum</td>
							<td>@order.OrderVM.Comments</td>
						</tr>
						@if (order.Expanded)
						{
							<tr>
								<td colspan="5" class="col-12 lighter-back" style="background-color: lightyellow">
									<OrderFullInfoAsTable Order="order.OrderVM" CandleNames="CandleNames" />
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	}

</div>
@OrdersExistMessage

@code {
	public IEnumerable<OrderVM> OrdersList { get; set; } = new List<OrderVM>();

	public string OrdersExistMessage { get; set; } = "Loading...";

	private IEnumerable<CandleFullVM> CandleNames { get; set; } = new List<CandleFullVM>();

	public ICollection<OrderWithExpanded> OrdersExpanded { get; set; } = new List<OrderWithExpanded>();

	protected override async Task OnInitializedAsync()
	{
		CandleNames = await candleHandler.GetAllCandlesListAsync("api/candle?view=full");

		OrdersList = await orderHandler.GetAllOrdesListAsync("api/order");
		OrdersList = OrdersList.OrderByDescending(o => o.Id);
		OrdersExistMessage = OrdersList.Any() switch
		{
			true => "",
			_ => "Сталась помилка або замовлення відсутні"
		};


		foreach (var o in OrdersList)
		{
			OrdersExpanded.Add(new OrderWithExpanded(o, false));
		}
	}


	public class OrderWithExpanded
	{
		public OrderVM OrderVM { get; set; } = null!;
		public bool Expanded { get; set; } = false;

		public OrderWithExpanded(OrderVM ordervm, bool value)
		{
			OrderVM = ordervm;
			Expanded = value;
		}
	}
}
