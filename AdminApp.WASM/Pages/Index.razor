@page "/"
@layout MainLayout;
@using AdminApp.WASM.Application.Interfaces;
@using AdminApp.WASM.Models.ViewModels;
@inject CandleHandlerService candleHandler;
@inject OrderHandlerService orderHandler;
@inject NoteHandlerService noteHandler;

<PageTitle>Road23 Home</PageTitle>

<style>
	.border-round {
		background-color: rgba(0, 0, 0, 0.20);
		/*background-color: #f6e8e8;*/
		/* background-color: #a3745a; */
		border-radius: 10px;
		color: white;
	}


</style>

<div class="container-md text-center">

	<img src="/img/4.png" alt="..." class="index-page-image" />
</div>


<div class="row">
	<div class="col">

		@* <article class="">
			<div class="container-lg">
				<NavLink href="note" class="container-lg btn btn-lg order-last1 shadow">
					<p class="h3">
						Ту ду @DateTime.Now.ToString("dd/MM/yy")
					</p>
				</NavLink>
			</div>

			<div class="container">
				<table class="table table-striped table-sm">
					<thead>
						<tr>
							<th class="text-center"></th>
							<th class="text-center"></th>
						</tr>
					</thead>
					<tbody>
						@if (TodayNotes is null)
						{
							<tr>
								<td colspan="2">
									Немає туду на сьогодні
								</td>
							</tr>
						}
						else if (!TodayNotes.Any())
						{
							<tr>
								<td colspan="2">
									<div class="placeholder-wave">
										<span class="placeholder col-1"></span>
										<span class="placeholder col-10"></span>
									</div>
									<div class="placeholder-wave">
										<span class="placeholder col-1"></span>
										<span class="placeholder col-10"></span>
									</div>
									<div class="placeholder-wave">
										<span class="placeholder col-1"></span>
										<span class="placeholder col-10"></span>
									</div>
								</td>
							</tr>
						}
						else
						{
							foreach (var note in TodayNotes.OrderBy(n => n.IsDone))
							{
								<tr>

									<td class="col-1">
										- &nbsp;
									</td>
									<td>

										<span class="@SetTextDecorationCssNote(note.IsDone)">
											@note.NoteText
										</span>
									</td>
								</tr>
							}
						}
					</tbody>
				</table>
			</div>


		</article> *@

		<article>
			<div class="container">

				<div class="row">
					<div class="col">
						<span class="h3 philosopher fw-bolder">
						Ту ду сьогодні 
					</span>
				
					</div>
				</div>
				
				<div class="row">
					<div class="col">
						<span class="philosopher">
							@DateTime.Now.ToString("dd MMM yyyy")
						</span>
					</div>
				</div>


			</div>


			<div class="container">
				<div class="row">

					@if (TodayNotes is null)
					{
						<div class="col-12 border-round my-1">
							<div class="row montserat" style="height: 50px;">
								<div class="col-auto my-auto">
									<span class="">
										Сьогодні чіл
									</span>
								</div>
							</div>
						</div>
					}
					else if (!TodayNotes.Any())
					{

						<AdminApp.WASM.Components.Placeholders.NoteItemInIndexPlaceholder />
						<AdminApp.WASM.Components.Placeholders.NoteItemInIndexPlaceholder />
						<AdminApp.WASM.Components.Placeholders.NoteItemInIndexPlaceholder />

					}
					else
					{
						foreach (var note in TodayNotes.OrderBy(n => n.IsDone))
						{
							<div class="col-12 border-round my-1">
								<div class="row montserat" style="height: 50px;">
									<div class="col-auto my-auto">
										<span class="@SetTextDecorationCssNote(note.IsDone)">
											@note.NoteText
										</span>
									</div>
								</div>
							</div>
						}
					}
				</div>
			</div>
		</article>

	</div>
</div>


@code {

	public IEnumerable<NoteVM>? TodayNotes { get; set; } = Enumerable.Empty<NoteVM>();


	// strings to HttpChecker to get if the items exist by path
	private string _notePath = "api/note";


	public string SetTextDecorationCssNote(bool isDone) => isDone ? "text-decoration-line-through" : "text-decoration-none";

	protected override async Task OnInitializedAsync()
	{
		var noteTask = Task.Run(() => noteHandler.GetAllNotesByDateAsync(DateOnly.FromDateTime(DateTime.Now), _notePath));
		
		TodayNotes = await noteTask;
		if (!TodayNotes.Any())
		{
			TodayNotes = null;
		}
	}



}