@page "/"
@using AdminApp.WASM.Application.Interfaces;
@using AdminApp.WASM.Models.ViewModels;
@inject CandleHandlerService candleHandler;
@inject OrderHandlerService orderHandler;

<PageTitle>Road23 Home</PageTitle>

<article class="border border-top-0 border-start-0 border-end-0 border-1 border-dark">
	<div class="container-lg">
		<NavLink href="order" class="container-lg btn btn-lg border border-3 order-last1">
			<span class="h3 text-bold">
				Замовлення
				</span>
		</NavLink>
	</div>
	<div class="container">
		<table class="table table-striped table-sm">
			<thead>
				<tr>
					<th class="text-center">Id</th>
					<th class="text-center">Дата</th>
					<th class="text-center">Свічки</th>
					<th class="text-center">Сума</th>
				</tr>
			</thead>
			<tbody>
				@if (!LastOrders.Any())
				{
					<tr>
						<td colspan="5">@OrdersLoadingMessage
							</td>
					</tr>
				}
				else
				{
					@foreach (var order in LastOrders)
					{
						<tr>
							<td>@order.Id</td>
							<td>@order.OrderDate.ToString("dd/MM/yy")</td>
							<td>
							@foreach(var detail in order.OrderDetails)
							{
								<CandleOrderedNameAndQuantity CandleName="@CandleNames.FirstOrDefault(c => c.Id == detail.CandleId)!.Name" CandleQuantity="@detail.CandleQuantity"	/>							
							}
							</td>
						
							<td>@order.TotalSum</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</article>

<div> </div>

<article class="border border-top-0 border-start-0 border-end-0 border-1 border-dark pt-3">
	<div>
		<div class="container-lg">
			<NavLink href="candle" class="container-lg btn btn-lg border border-3 ">
				<span class="h3 text-bold">
					Свічки
				</span>
			</NavLink>
		</div>
	</div>
	<div class="container">
		<table class="table table-striped table-sm">
			<thead>
				<tr>
					<th>Id</th>
					<th>Назва</th>
					<th>Ціна</th>
				</tr>
			</thead>
			<tbody>
				@if (!LastCandles.Any())
				{
					<tr>
						<td colspan="4">
							@CandlesLoadingMessage
						</td>
					</tr>
				}
				else
				{
					@foreach (var candle in LastCandles)
					{
						<tr>
							<td>@candle.Id</td>
							<td>@candle.Name</td>
							<td>@candle.SellPrice</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</article>




@code {
	public IEnumerable<OrderVM> LastOrders { get; set; } = Enumerable.Empty<OrderVM>();
	public IEnumerable<CandleFullVM> LastCandles { get; set; } = Enumerable.Empty<CandleFullVM>();

	public IEnumerable<CandleFullVM> CandleNames { get; set; } = Enumerable.Empty<CandleFullVM>();

	// Message 'Loading...' or 'No {item}' displayed in the Table
	public string OrdersLoadingMessage { get; set; } = "Loading...";
	public string CandlesLoadingMessage { get; set; } = "Loading...";

	// strings to HttpChecker to get if the items exist by path
	private string _ordersPath = "api/order";
	private string _candlesPath = "api/candle?view=full";


	protected override async Task OnInitializedAsync()
	{
		LastOrders = await orderHandler.GetLastOrdersAsync(_ordersPath);
		OrdersLoadingMessage = LastOrders.Any() switch
		{
			true => "",
			false => "Сталась помилка або замовлення відсутні."
		};

		LastCandles = await candleHandler.GetLastCandlesListAsync(_candlesPath);
		CandlesLoadingMessage = LastCandles.Any() switch
		{
			true => "",
			false => "Сталась помилка або свічки відсутні."
		};

		CandleNames = await candleHandler.GetAllCandlesListAsync(_candlesPath);
	}

	

}