@page "/candle/new-candle"
@layout CandlesLayout;
@using AdminApp.WASM.Application.Utility;
@using AdminApp.WASM.Models.ViewModels;
@inject NavigationManager navmanager;
@inject HttpClient hclient;
@inject CandleHandlerService candleInteractor;
@inject CategoryHandlerService categoryService;

<div>
	<AdminApp.WASM.Components.NavigationComponents.ReturnBackButtonComponent FromPageReached="candle" Text="Всі свічки" />
</div>

<MessageResponseComponent MessageResponse="@MessageResponse" />

<div class="container">
	<h3 class="display-4">Нова Свічка</h3>
</div>

<div class="container">
	<EditForm Model="NewCandleForm" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" @onsubmit:preventDefault>
		<DataAnnotationsValidator />
		<CascadingValue Value="NewCandleForm">
			<CandleAsInputFields Categories="CatNames" @bind-NewCategoryToAdd="@PossibleNewCategoryName" />
		</CascadingValue>

		<InputFile class="form-control" OnChange="LoadPhoto" />

		<div class="container-fluid d-grid d-md-block p-5">
			<ButtonWithSpinnerAction ButtonCss="btn btn-lg btn-success rounded-1" ButtonText="Додати" IsButtonPressed=@_isAddButtonPressed />
			@* <button class="btn btn-lg btn-success rounded-1">
				<span class="@SetAddButtonCssSpinner(_isAddButtonPressed)" aria-hidden="true"></span>
				<span>Додати</span>
			</button> *@
		</div>
	</EditForm>

	<p>@_isLoaded</p>
	<img src="@IMG" height="50" width="50"/>
</div>

@code {
	public NewCandleFormModel NewCandleForm { get; set; } = new();

	public string MessageResponse { get; set; } = "";

	public IEnumerable<CategoryVM> Categories { get; set; } = new List<CategoryVM>(10);
	public List<string> CatNames { get; set; } = new List<string>();

	public string PossibleNewCategoryName { get; set; } = string.Empty;

	// check if button is pressed
	private bool _isAddButtonPressed = false;


	public async Task HandleValidSubmit()
	{
		// to display spinner in button
		_isAddButtonPressed = true;

		// checking if the possible new category has any value
		if (NewCandleForm.Category == Constants.NEW_CATEGORY_TO_ADD_OPTION && !string.IsNullOrEmpty(PossibleNewCategoryName))
		{
			NewCandleForm.Category = PossibleNewCategoryName;
		}

		CandleFullVM candleToAdd = NewCandleForm.ConvertToFullVM_FromFormModel();

		var result = await candleInteractor.CreateCandleAsync("api/candle", candleToAdd);
		if (result)
		{
			MessageResponse = "Свічка успішно додана.";
		}
		else
		{
			MessageResponse = "Не вдалось додати свічку";
		}

		// remove spinner in button
		_isAddButtonPressed = false;
	}

	public void HandleInvalidSubmit()
	{
		MessageResponse = "Invalid entry";
	}

	protected override async Task OnInitializedAsync()
	{
		Categories = await categoryService.GetCategoryListAsync("api/candlecategory");
		// Categories.Add(new CategoryVM { Name = "..." });

		CatNames = Categories.Select(c => c.Name).ToList();
		CatNames.Add(Constants.NEW_CATEGORY_TO_ADD_OPTION);

	}

	private bool _isLoaded = false;

	public string IMG { get; set; }

	private async Task LoadPhoto(InputFileChangeEventArgs e)
	{
		try
		{
			//var dir = Directory.GetCurrentDirectory();
			//var name = DateTime.Now.ToString("HHmmssddMMyyyy") + ".png";

			//var path = Path.Combine("wwwroot/img", name);
			//await using FileStream fs = new(path, FileMode.Create);



			// retrieving the file uploaded
			var	browserfile = e.File;

			using MemoryStream ms = new();
			await browserfile.OpenReadStream(browserfile.Size).CopyToAsync(ms);

			// converting image to byte array
			byte[] imgBuffer = ms.ToArray();



			//await browserfile.OpenReadStream(browserfile.Size).CopyToAsync(fs);


			// convetring to base64 to display
			var temp = Convert.ToBase64String(imgBuffer);
			IMG = string.Format("data:image/jpeg;base64,{0}", temp);
			_isLoaded = true;

			//NewCandleForm.PhotoLink = path;



			using var content = new MultipartFormDataContent();
			var fileContent = new StreamContent(browserfile.OpenReadStream(browserfile.Size));
			fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(browserfile.ContentType);
			
			// RETURNS BAD REQUEST DONT KNOW WHY
			content.Add(content: fileContent);
			var result = await hclient.PostAsync($"api/candle/upload?candleId=8004", content);
			var b = result.Content;

	}
		catch (Exception ex)
		{
			var msg = ex.Message;
			_isLoaded = false;
			NewCandleForm.PhotoLink = default;
		}
	}
}
