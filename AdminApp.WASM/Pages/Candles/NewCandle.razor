@page "/candle/new-candle"
@layout CandlesLayout;
@using AdminApp.WASM.Application.Utility;
@using AdminApp.WASM.Models.ViewModels;
@inject NavigationManager navmanager;
@inject HttpClient hclient;
@inject CandleHandlerService candleInteractor;
@inject CategoryHandlerService categoryService;

<div>
	<AdminApp.WASM.Components.NavigationComponents.ReturnBackButtonComponent FromPageReached="candle" Text="Всі свічки" />
</div>

<MessageResponseComponent MessageResponse="@MessageResponse" />

<div class="container">
	<h3 class="display-4">Нова Свічка</h3>
</div>

<div class="container">
	<EditForm Model="NewCandleForm" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" @onsubmit:preventDefault>
		<DataAnnotationsValidator />
		<CascadingValue Value="NewCandleForm">
			<CandleAsInputFields Categories="CatNames" @bind-NewCategoryToAdd="@PossibleNewCategoryName" />
		</CascadingValue>

		<div class="container-fluid d-grid d-md-block p-5">
			<ButtonWithSpinnerAction ButtonCss="btn btn-lg btn-success rounded-1" ButtonText="Додати" IsButtonPressed=@_isAddButtonPressed />
			@* <button class="btn btn-lg btn-success rounded-1">
				<span class="@SetAddButtonCssSpinner(_isAddButtonPressed)" aria-hidden="true"></span>
				<span>Додати</span>
			</button> *@
		</div>
	</EditForm>
</div>

@code {
	public NewCandleFormModel NewCandleForm { get; set; } = new();

	public string MessageResponse { get; set; } = "";

	public IEnumerable<CategoryVM> Categories { get; set; } = new List<CategoryVM>(10);
	public List<string> CatNames { get; set; } = new List<string>();

	public string PossibleNewCategoryName { get; set; } = string.Empty;

	// check if button is pressed
	private bool _isAddButtonPressed = false;

	public async Task HandleValidSubmit()
	{
		// to display spinner in button
		_isAddButtonPressed = true;

		// checking if the possible new category has any value
		if (NewCandleForm.Category == Constants.NEW_CATEGORY_TO_ADD_OPTION && !string.IsNullOrEmpty(PossibleNewCategoryName))
		{
			NewCandleForm.Category = PossibleNewCategoryName;
		}


		CandleFullVM candleToAdd = NewCandleForm.ConvertToFullVM_FromFormModel();

		var result = await candleInteractor.CreateCandleAsync("api/candle", candleToAdd);
		if (result)
		{
			MessageResponse = "Свічка успішно додана.";
		}
		else
		{
			MessageResponse = "Не вдалось додати свічку";
		}

		// remove spinner in button
		_isAddButtonPressed = false;
	}

	public void HandleInvalidSubmit()
	{
		MessageResponse = "Invalid entry";
	}

	protected override async Task OnInitializedAsync()
	{
		Categories = await categoryService.GetCategoryListAsync("api/candlecategory");
		// Categories.Add(new CategoryVM { Name = "..." });

		CatNames = Categories.Select(c => c.Name).ToList();
		CatNames.Add(Constants.NEW_CATEGORY_TO_ADD_OPTION);

	}


}
