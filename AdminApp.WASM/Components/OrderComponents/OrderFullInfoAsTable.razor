@inject NavigationManager navManager;
@layout OrdersLayout;

<style>
	.outside-border {
		border: 1px solid green;
	}
</style>

@if (Order is not null)
{
	<!-- TABLE TYPE VIEW -->
@* 	<table class="table mt-0 mb-3">

		<tr>
			<th scope="row" class="col-5 col-lg-2">Id</th>
			<td colspan="1" class="col-4 col-lg-5">@Order.Id</td>
			<td colspan="2" class="col-3 col-lg-1">
				<div class="d-grid p-0">
					<button type="button" class="btn btn-secondary" @onclick="() => EditOrder(Order.Id)">
						<span class="oi oi-pencil" aria-hidden="true"></span>
					</button>
				</div>
			</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Дата замовлення:</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.OrderDate.ToString("dd/MM/yy")</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Отримувач</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.Receiver.FullName</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Телефон</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.Receiver.PhoneNumber</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Місто</th>
			<td colspan="5" class="col-5 col-lg-2">@Order.Receiver.City</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Адреса НП</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.Receiver.DeliveryAdress</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Тип оплати</th>
			<td colspan="5" class="col-7 col-lg-2">@Payment</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Свічка</th>
			<td colspan="5" class="col-7 col-lg-2">
				@foreach (var detail in Order.OrderDetails)
				{
					<CandleOrderedNameAndQuantity CandleName="@CandleNames.FirstOrDefault(c => c.Id == detail.CandleId)?.Name"
												  CandleQuantity="@detail.CandleQuantity" />
				}
			</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Воску потрібно</th>
			<td colspan="5" class="col-7 col-lg-2">
				@{
					int totalgrams = 0;
					foreach (var detail in Order.OrderDetails)
					{
						int aa = (int)CandleNames.FirstOrDefault(c => c.Id == detail.CandleId)?.WaxNeededGram!;
						int grams = aa * detail.CandleQuantity;
						totalgrams += grams;
					}
					@totalgrams

					<span> г.</span>
				}
			</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Сума</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.TotalSum</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Промокод</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.Promocode</td>
		</tr>

		<tr>
			<th scope="row" class="col-5 col-lg-2">Коментар</th>
			<td colspan="5" class="col-7 col-lg-2">@Order.Comments</td>
		</tr>

	</table> *@


	<!-- IMPROVED TABLE VIEW -->
	<tr>
		<td colspan="5">
			<table class="table outside-border">
				<tbody>
					<tr>
						<th scope="row" class="col-5 col-lg-2">Id</th>
						<td colspan="1" class="col-4 col-lg-5">@Order.Id</td>
						<td colspan="2" class="col-3 col-lg-1">
							<div class="d-grid p-0">
								<button type="button" class="btn btn-secondary" @onclick="() => EditOrder(Order.Id)">
									<span class="oi oi-pencil" aria-hidden="true"></span>
								</button>
							</div>
						</td>
					</tr>
					<tr>
						<th scope="row">Дата замовлення:</th>
						<td colspan="5">@Order.OrderDate.ToString("dd/MM/yy")</td>
					</tr>
				</tbody>
			</table>
		</td>
	</tr>

	<tr>
		<td colspan="5">
			<table class="table outside-border">
				<tbody>

				<tr>
					<th scope="row" class="col-5">Отримувач</th>
					<td colspan="5" class="col-7">@Order.Receiver.FullName</td>
				</tr>

				<tr>
					<th scope="row" class="col-5">Телефон</th>
					<td colspan="5" class="col-7">@Order.Receiver.PhoneNumber</td>
				</tr>

				<tr>
					<th scope="row" class="col-5">Місто</th>
					<td colspan="5" class="col-5">@Order.Receiver.City</td>
				</tr>

				<tr>
					<th scope="row" class="col-5">Адреса НП</th>
					<td colspan="5" class="col-7">@Order.Receiver.DeliveryAdress</td>
				</tr>

				</tbody>
			</table>
		</td>
	</tr>


	<tr>
		<td colspan="5">
			<table class="table outside-border">
				<tbody>
					<tr class="border border-0">
						<th scope="row" class="col-5 col-lg-2">Тип оплати</th>
						<td colspan="5" class="col-7 col-lg-2">@Payment</td>
					</tr>
					<tr>
						<th scope="row" class="col-5 col-lg-2">Сума</th>
						<td colspan="5" class="col-7 col-lg-2">@Order.TotalSum</td>
					</tr>

					<tr>
						<th scope="row" class="col-5 col-lg-2">Промокод</th>
						<td colspan="5" class="col-7 col-lg-2">@Order.Promocode</td>
					</tr>

					<tr>
						<th scope="row" class="col-5 col-lg-2">Коментар</th>
						<td colspan="5" class="col-7 col-lg-2">@Order.Comments</td>
					</tr>
				</tbody>
			</table>
		</td>
	</tr>

	<tr>
		<td colspan="5">
			<table class="table outside-border">
				<thead>
					<tr></tr>
					<tr></tr>
					<tr></tr>
				</thead>
				<tbody>
					<tr>
						<th scope="row" class="col-5 col-lg-2">Свічка</th>
						<td colspan="2" class="col-7 col-lg-2">
							@foreach (var detail in Order.OrderDetails)
							{
								<CandleOrderedNameAndQuantity CandleName="@CandleNames.FirstOrDefault(c => c.Id == detail.CandleId)?.Name"
															  CandleQuantity="@detail.CandleQuantity" />
							}
						</td>
					</tr>

					<tr>
						<th colspan="2" scope="row" class="col-8 col-lg-2">Воску потрібно</th>
						<td class="col-4 col-lg-2">
							@{
								int totalgrams1 = 0;
								foreach (var detail in Order.OrderDetails)
								{
									int aa = (int)CandleNames.FirstOrDefault(c => c.Id == detail.CandleId)?.WaxNeededGram!;
									int grams = aa * detail.CandleQuantity;
									totalgrams1 += grams;
								}
								@totalgrams1

								<span> г.</span>
							}
						</td>
					</tr>
				</tbody>
			</table>
		</td>
	</tr>

	
}
@code {
	[Parameter]
	public OrderVM Order { get; set; } = null!;

	[Parameter]
	public IEnumerable<CandleFullVM> CandleNames { get; set; } = null!;

	public bool PaidOrder { get; set; }

	public void EditOrder(int orderId)
	{
		navManager.NavigateTo($"order/{orderId}");
	}

	public string Payment { get; set; } = "";


	protected override void OnParametersSet()
	{
		Payment = Order.PaymentType switch
		{
			0 => "Готівка",
			1 => "Картка",
			2 => "ЗД",
			_ => "Готівка"
		};

		PaidOrder = Order.IsPaid;
	}

	public void PaidChanged()
	{
		Order.IsPaid = PaidOrder;
	}
}
